name: "Brand impersonation: Meta/Facebook"
description: |
  Impersonation of Meta or Meta's subsidiary Facebook.
references:
  - "https://www.techrepublic.com/article/google-and-amazon-most-impersonated-brands-in-phishing-attacks/"
type: "rule"
severity: "low"
source: |
  type.inbound
  and (
    (
      strings.ilike(sender.display_name,
                    '*facebook ads*',
                    '*facebook business*',
                    '*meta support*',
                    '*meta for business*',
                    '*meta policy*'
      )
      or strings.ilevenshtein(sender.display_name, 'facebook ads') <= 2
      or strings.ilevenshtein(sender.display_name, 'facebook business') <= 2
      or strings.ilevenshtein(sender.display_name, 'meta support') <= 2
      or strings.ilike(sender.email.domain.domain, '*facebook*')
    )
    or (
      (
        (
          regex.icontains(sender.display_name,
                          '\bfacebook\b',
                          '\bmeta\b',
                          '\bmeta.*support\b'
          )
          // negate metageek.com
          and not (
            strings.icontains(sender.display_name, 'MetaGeek Support')
            and sender.email.domain.root_domain == "metageek.com"
          )
        )
        or strings.ilevenshtein(sender.display_name, 'facebook') <= 2
      )
      and (
        any(ml.logo_detect(beta.message_screenshot()).brands,
            .name in ("Facebook", "Meta")
        )
        or any(ml.nlu_classifier(body.current_thread.text).intents,
               .name in ("cred_theft", "callback_scam", "steal_pii")
               and .confidence in ("high")
        )
      )
    )
    or 
    // or the body contains a facebook/meta footer with the address citing "community support" 
    (
      regex.icontains(body.current_thread.text,
                      "Meta Platforms, Inc., Attention: Community Support, 1 (Facebook|Meta) Way, Menlo Park, CA 94025"
      )
      // and it contains a link to spawn a chat with facebook - this is not the way support operates
      and (
        any(body.links,
            strings.ends_with(.href_url.domain.domain, 'facebook.com')
            and strings.starts_with(.href_url.path, '/msg/')
        )
        or (
          any(ml.nlu_classifier(body.current_thread.text).intents,
              .name in ("cred_theft", "callback_scam", "steal_pii")
              and .confidence in ("high")
          )
        )
      )
    )
  )
  and sender.email.domain.root_domain not in~ (
    'facebook.com',
    'facebookmail.com',
    'eventsatfacebook.com',
    'facebookenterprise.com',
    'meta.com',
    'metamail.com',
    'medallia.com'
  )
  // negate metaenterprise links
  and not any(headers.reply_to, .email.email == "noreply@facebookmail.com")
  and (
    (
      profile.by_sender().prevalence != "common"
      and not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
    or sender.email.email == "noreply@salesforce.com"
    // sent via Google group
    or any(headers.hops, any(.fields, .name == "X-Google-Group-Id"))
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  
    // salesforce has been abused for meta phishing campaigns repeatedly 
    or sender.email.domain.root_domain == "salesforce.com"
  )
  and not profile.by_sender().any_false_positives

attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Lookalike domain"
  - "Social engineering"
detection_methods:
  - "Header analysis"
  - "Sender analysis"
id: "e38f1e3b-79be-5a59-b084-24a851daf6b9"
