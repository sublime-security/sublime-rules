name: "Credential Phishing: Fake Storage alerts (unsolicited)"
description: "This rule targets credential phishing attempts disguised as storage space alerts, activating for inbound emails with specific storage-related keywords and evaluating sender trustworthiness and history."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and (
    (
      0 < length(body.links) < 8
      and any([subject.subject, sender.display_name],
              regex.icontains(., "storage|mailbox")
      )
    )
    or (
      any(file.explode(beta.message_screenshot()),
          any(ml.nlu_classifier(.scan.ocr.raw).intents,
               .name == "cred_theft" and .confidence == "high"
          )
          and regex.icontains(.scan.ocr.raw,
                            "storage.{0,50}full",
                            "free.{0,50}upgrade",
                            "storage.{0,50}details",
                            "storage.{0,50}quot",
                            "email.{0,50}storage",
                            "total.{0,50}storage"
          )
          and not strings.ilike(.scan.ocr.raw, "*free plan*")
      )
    )
    or (
      any(body.links,
          // fingerprints of a hyperlinked image
          .display_text is null
          and .display_url.url is null
          and (
            .href_url.domain.root_domain in $free_file_hosts
            or .href_url.domain.root_domain == "beehiiv.com"
          )
          and length(attachments) ==1
          and all(attachments,
                  .file_type in $file_types_images
                  and .size > 2000
                  and any(file.explode(.),
                          regex.icontains(.scan.ocr.raw,
                            "storage.{0,50}full",
                            "free.{0,50}upgrade",
                            "storage.{0,50}details",
                            "storage.{0,50}quot",
                            "email.{0,50}storage",
                            "total.{0,50}storage"
          )
                  )
          )
      )
    )
  )
  and (
    regex.icontains(subject.subject, '\bfull\b')
    or strings.icontains(subject.subject, "exceeded")
    or strings.icontains(subject.subject, "out of")
    or strings.icontains(subject.subject, "icloud")
    or strings.icontains(subject.subject, "limit")
    or strings.icontains(subject.subject, "all storage used")
    or strings.icontains(subject.subject, "compliance")
    or strings.icontains(subject.subject, "max storage")
    or strings.icontains(subject.subject, "storage space")
  )
  // netgate links to loopnet.com - a popular commerical property listing service
  and not (
      any(body.links, .href_url.domain.root_domain == "loopnet.com")
  )
  
  // negate legitimate sharepoint storage alerts
  and (
    (
      sender.email.email == "no-reply@sharepointonline.com"
      and not headers.auth_summary.dmarc.pass
      and (
        not all(body.links,
                .href_url.domain.root_domain in~ (
                  "sharepoint.com",
                  "microsoft.com",
                  "aka.ms"
                )
        )
      )
    )
    or sender.email.email != "no-reply@sharepointonline.com"
  )

  // negate legitimate iCloud China storage alerts
  and (
    (
      sender.email.email == "noreply@icloud.com.cn"
      and not headers.auth_summary.dmarc.pass
      and (
        not all(body.links,
                .href_url.domain.root_domain in~ (
                  "icloud.com",
                  "aka.ms"
                )
        )
      )
    )
    or sender.email.email != "noreply@icloud.com.cn"
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  and (
    not profile.by_sender().solicited
    or profile.by_sender().any_messages_malicious_or_spam
  )
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Sender analysis"

id: "750f04d6-f68a-564c-9e41-c1e5a58df28f"
