name: "Brand impersonation: Sharepoint fake file share"
description: |
  This rule detects messages impersonating a Sharepoint file sharing email where no links point to known Microsoft domains.
type: "rule"
severity: "medium"
source: |
  type.inbound
  
  // Sharepoint body content looks like this
  and strings.contains(body.current_thread.text, "shared a file with you")
  and strings.icontains(subject.subject, "shared")
  and any(ml.logo_detect(beta.message_screenshot()).brands, .name == "Microsoft")
  
  // fake Sharepoint shares are easy to identify if there are any links
  // that don't point to microsoft[.]com or *.sharepoint[.]com
  and not all(body.links,
              .href_url.domain.root_domain in ("aka.ms", "microsoft.com", "sharepoint.com")
  )
  and sender.email.domain.root_domain not in $org_domains
  and sender.email.domain.root_domain not in (
    "bing.com",
    "microsoft.com",
    "microsoftonline.com",
    "microsoftsupport.com",
    "microsoft365.com",
    "office.com",
    "onedrive.com",
    "sharepointonline.com",
    "yammer.com",
    //ignore microsoft privacy statement links
    "aka.ms"
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  and (
    (
      not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not profile.by_sender().any_false_positives

attack_types:
  - "Credential Phishing"
  - "Malware/Ransomware"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "URL analysis"
  - "Computer Vision"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
id: "ff8b296b-aa0d-5df0-b4d2-0e599b688f6a"
