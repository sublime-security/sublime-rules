name: "Brand impersonation: Sharepoint fake file share"
description: |
  This rule detects messages impersonating a Sharepoint file sharing email where no links point to known Microsoft domains.
type: "rule"
severity: "medium"
source: |
  type.inbound
  
  // Sharepoint body content looks like this
  and any([body.current_thread.text, body.plain.raw],
          strings.ilike(.,
                        "*shared a file with you*",
                        "*shared with you*",
                        "*invited you to access a file*"
          )
  )
  and strings.ilike(subject.subject, "*shared*", "*updated*")
  and (
    any(ml.logo_detect(beta.message_screenshot()).brands,
        strings.starts_with(.name, "Microsoft")
    )
    or any(attachments,
           .file_type in $file_types_images
           and any(ml.logo_detect(.).brands,
                   strings.starts_with(.name, "Microsoft")
           )
    )
  )

  // Negate messages when the message-id indciates the message is from MS actual. DKIM/SPF domains can be custom and therefore are unpredictable.
  and not (
      strings.starts_with(headers.message_id, '<Share-')
      and strings.ends_with(headers.message_id, '@odspnotify>')
  )

  // fake Sharepoint shares are easy to identify if there are any links
  // that don't point to microsoft[.]com or *.sharepoint[.]com
  and not all(body.links,
              .href_url.domain.root_domain in ("1drv.ms", "aka.ms", "microsoft.com", "sharepoint.com")
  )
  and sender.email.domain.root_domain not in $org_domains
  and sender.email.domain.root_domain not in (
    "bing.com",
    "microsoft.com",
    "microsoftonline.com",
    "microsoftsupport.com",
    "microsoft365.com",
    "office.com",
    "onedrive.com",
    "sharepointonline.com",
    "yammer.com",
    //ignore microsoft privacy statement links
    "aka.ms"
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  and (
    (
      not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not profile.by_sender().any_false_positives

attack_types:
  - "Credential Phishing"
  - "Malware/Ransomware"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "URL analysis"
  - "Computer Vision"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
id: "ff8b296b-aa0d-5df0-b4d2-0e599b688f6a"
