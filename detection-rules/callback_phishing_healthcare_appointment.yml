name: "Callback Phishing: Healthcare Appointment Confirmation"
description: "Detects messages from free email providers discussing healthcare appointments and containing phone numbers to reschedule or cancel, without any prior benign communication history."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and length(body.current_thread.text) < 5000
  and length(recipients.to) == 1
  and length(recipients.cc) == 0
  and length(recipients.bcc) == 0
  and length(attachments) == 0
  
  // from a free email provider (not a legitimate healthcare domain)
  and sender.email.domain.root_domain in $free_email_providers
  
  // healthcare topic
  and any(beta.ml_topic(body.current_thread.text).topics,
          .name == "Health and Wellness"
  )
  
  // Appointment-related language
  and regex.icontains(body.current_thread.text,
                      'appointment|scheduled|your meeting is set|visit|consultation|patient|doctor|md|dr\.'
  )
  
  // Contains specific appointment elements
  and 4 of (
    // Contains date and time
    regex.contains(body.current_thread.text,
                   '\d{1,2}[/:].\d{1,2}|\d{1,2}:\d{2}|\d{1,2} ?(?:am|pm)|\d{1,2}[/-]\d{1,2}[/-]\d{2,4}'
    ),
    // Contains typical appointment info
    regex.icontains(body.current_thread.text,
                    'insurance|photo id|identification|arrive .{1,20} minutes early|bring|prescription|health'
    ),
    // Contains medical terms
    regex.icontains(body.current_thread.text,
                    'medical|clinic|hospital|doctor|physician|specialist|medicine|exam|specialty|healthcare|patient'
    ),
    // Contains suspicious terms
    regex.icontains(body.current_thread.text,
                    'estimated fee|payment|invoice|bill|charge|cost|amount due'
    ),
    // Contains poor grammar indicators
    regex.icontains(body.current_thread.text,
                    'need update|you change or|need bring|things to bring|things to remembered|please confirmed|provide update'
    ),
    // Generic or suspicious wording
    regex.icontains(body.current_thread.text,
                    'health provider|sensitive patient information|medical practitioner'
    ),
    // NLU detected intents for stealing PII
    any(ml.nlu_classifier(body.current_thread.text).intents,
        .name == "steal_pii" and .confidence in ("medium", "high")
    )
  )
  and regex.contains(body.current_thread.text,
                     '\+?([ilo0-9]{1}.)?\(?[ilo0-9]{3}?\)?.[ilo0-9]{3}.?[ilo0-9]{4}',
                     '\+?([ilo0-9]{1,2})?\s?\(?\d{3}\)?[\s\.\-⋅]{0,5}[ilo0-9]{3}[\s\.\-⋅]{0,5}[ilo0-9]{4}'
  )
  // Check for urgency or request entities via NLU
  and any(ml.nlu_classifier(body.current_thread.text).entities,
          .name in ("urgency", "request")
  )
  
  // bounce-back negations
  and not strings.like(sender.email.local_part,
                       "*postmaster*",
                       "*mailer-daemon*",
                       "*administrator*"
  )
  and not any(attachments,
              .content_type in (
                "message/rfc822",
                "message/delivery-status",
                "text/calendar"
              )
  )
  
  // no benign history with this sender
  and not profile.by_sender().any_messages_benign

attack_types:
  - "Callback Phishing"
tactics_and_techniques:
  - "Free email provider"
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Sender analysis"
  - "Natural Language Understanding"
id: "5337d737-36be-5ba6-b7a4-bc27e1b7c94f"
