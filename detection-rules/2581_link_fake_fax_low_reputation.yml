name: "Brand impersonation: Fake fax"
description: |
  Detects the presence of known brand logos, mentions of "fax" in the subject or sender's display name, and a low reputation link from an untrusted sender.
references:
  - "https://www.hoxhunt.com/blog/fax-phishing"
type: "rule"
severity: "medium"
source: "type.inbound\n\n// not a reply/fwd\nand length(headers.references) == 0 \nand headers.in_reply_to is null\n\n// Subject or sender contains fax\nand (\n  any([subject.subject, sender.display_name],\n      regex.icontains(.,\n                      '\\bfax\\b',\n                      '[ve][[:punct:]]?fax',\n                      '[[:punct:]]fax\\b',\n                      '\\bfax[[:punct:]]'\n      )\n  )\n)\nand (\n  // body.current_thread.text logic\n  (\n    ( // strong notification terms in either the subject or body.current_thread.text\n      any([subject.subject, body.current_thread.text],\n          strings.icontains(., \"New Fax Received\")\n          or strings.icontains(., \"New Fax Document\")\n          or regex.icontains(., \"(?:received|have) a (?:new )?fax\")\n          or regex.icontains(., \"to view (th(?:e|is) )?(?:fax|message)\")\n          or regex.icontains(.,\n                             'transmit(?:ted|ting)?(?:\\s+\\w+){0,2}\\s+(?:fax|facsimile)',\n                             '(?:fax|facsimile)\\s+(?:\\s+\\w+){0,2}transmit(?:ted|ting)?',\n          )\n      )\n      and (\n        // combined with above, we should have very high confidence this is a fax message\n        (\n          // date\n          strings.icontains(body.current_thread.text, \"Date:\")\n          or strings.icontains(body.current_thread.text, \"Time Sent:\")\n          or strings.icontains(body.current_thread.text, \"Time Received:\")\n          or strings.icontains(body.current_thread.text, \"Received\")\n          // page count\n          or regex.icontains(body.current_thread.text, \"Num(ber)? of Pages?\")\n          or strings.icontains(body.current_thread.text, \"Type: PDF\")\n        )\n        // commonly abused brands\n        or (\n          strings.icontains(body.current_thread.text,\n                            \"eFax is a registered trademark of Consensus\"\n          )\n          or strings.icontains(body.current_thread.text, \"RingCentral, Inc\")\n        )\n        // there is a link with the display text of some CTA\n        or any(body.links,\n               strings.icontains(.display_text, \"open fax\")\n               // review document, view document review and sign document\n               or regex.icontains(.display_text,\n                                  \"(?:re)?view (?:(?:&|and) sign )?document\"\n               )\n               or strings.icontains(.display_text, \"Open document\")\n        )\n      )\n    )\n    // attachment logic\n    or (\n      // the body.current_thread.text length is very short (probably just a warning banner)\n      // and the attacment isn't used in the body of the message\n      // https://platform.sublime.security/messages/95f01a3c68655e685d90b62b8636d2f53bb4148c49a52391b59a083637afd0f2\n      length(body.current_thread.text) < 300\n      // and there are attachments\n      and 0 < length(attachments) < 5\n      // the attachments shouldn't be images which are used in the body of the html\n      and any(attachments,\n              strings.icontains(.file_name, 'fax')\n              or (\n\n                // or they are used in the body and OCR on them contains fax wording\n                // https://platform.sublime.security/messages/07bdeda6a045ade4a1669b263d3f506ea4c40a8559148f2ffff600d6140bac90\n\n                // the image is used in the HTML body\n                .file_type in $file_types_images\n                and any(regex.extract(.content_id, '^\\<(.*)\\>$'),\n                        any(.groups,\n                            strings.icontains(body.html.raw,\n                                              strings.concat('src=\"cid:',\n                                                             .,\n                                                             '\"'\n                                              )\n                            )\n                        )\n                )\n                and (\n                  // and that image contains fax wording\n                  strings.icontains(beta.ocr(.).text, \"New Fax Received\")\n                  or strings.icontains(beta.ocr(.).text, \"New Fax Document\")\n                  or regex.icontains(beta.ocr(.).text,\n                                     \"(?:received|have) a (?:new )?fax\"\n                  )\n                  or regex.icontains(beta.ocr(.).text,\n                                     \"to view (th(?:e|is) )?(?:fax|message)\"\n                  )\n                  or regex.icontains(beta.ocr(.).text,\n                                     'transmit(?:ted|ting)?(?:\\s+\\w+){0,2}\\s+(?:fax|facsimile)',\n                                     '(?:fax|facsimile)\\s+(?:\\s+\\w+){0,2}transmit(?:ted|ting)?',\n                  )\n                )\n              )\n      )\n    )\n  )\n)\n// negate known fax mailers\nand not (\n  sender.email.domain.root_domain in (\n    \"faxage.com\",\n    'fax2mail.com',\n    'ringcentral.com',\n    'avaya.com',\n    'egoldfax.com',\n    'efax.com',\n    'hellofax.com',\n    'mfax.io',\n    'goto.com',\n    'faxmessage.net'\n  )\n  and headers.auth_summary.dmarc.pass\n)\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Image as content"
  - "Free file host"
  - "Free subdomain host"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "Optical Character Recognition"
  - "Sender analysis"
  - "URL analysis"
id: "384d475c-601d-5031-4c9f-b292c8a17d52"
og_id: "2a96b90a-64bf-52ad-b4e4-6f1e8c1dcba6"
testing_pr: 2581
testing_sha: ddc96942f3d2051295ac38adb57236c86692633f
