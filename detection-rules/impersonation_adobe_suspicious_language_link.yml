name: "Brand impersonation: Adobe with suspicious language and link"
description: "Email contains an Adobe logo, at least one link, and suspicious link language from a new sender."
type: "rule"
severity: "high"
source: |
  type.inbound
  // all attachments are images or 0 attachments
  and (
    (
      length(attachments) > 0
      and all(attachments, .file_type in $file_types_images)
    )
    or length(attachments) == 0
  )
  and length(body.links) > 0
  and any(ml.logo_detect(beta.message_screenshot()).brands,
          .name == "Adobe" and .confidence in ("high")
  )
  and (
    any(file.explode(beta.message_screenshot()),
        strings.ilike(.scan.ocr.raw,
                      "*review*",
                      "*sign*",
                      "*view*",
                      "open",
                      "*completed document*",
                      "*open agreement*",
                      "*open document*"
        )
        and not strings.ilike(.scan.ocr.raw,
                                  "*view this email*", "*view*browser*"
        )
    )
    or any(body.links,
           strings.ilike(.display_text,
                         "*review*",
                         "*sign*",
                         "*view*",
                         "open",
                         "*completed document*",
                         "*open agreement*",
                         "*open document*"
           )
           and not strings.ilike(.display_text,
                                     "*view this email*", "*view*browser*"
           )
    )
  )
  and (
    (
      (
        length(headers.references) > 0
        or not any(headers.hops,
                   any(.fields, strings.ilike(.name, "In-Reply-To"))
        )
      )
      and not (
        (
          strings.istarts_with(subject.subject, "RE:")
          or strings.istarts_with(subject.subject, "RES:")
          or strings.istarts_with(subject.subject, "R:")
          or strings.istarts_with(subject.subject, "ODG:")
          or strings.istarts_with(subject.subject, "答复:")
          or strings.istarts_with(subject.subject, "AW:")
          or strings.istarts_with(subject.subject, "TR:")
          or strings.istarts_with(subject.subject, "FWD:")
          or regex.imatch(subject.subject,
                        '(\[[^\]]+\]\s?){0,3}(re|fwd?|automat.*)\s?:.*'
        )
        )
      )
    )
    or length(headers.references) == 0
  )
  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "Header analysis"
  - "Sender analysis"
id: "32cc8bf1-f4d7-549f-a970-eade24b7c6ae"
