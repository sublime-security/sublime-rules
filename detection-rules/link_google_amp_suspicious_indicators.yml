name: "Credential Phishing: Google Accelerated Mobile Pages (AMP) abuse"
description: |
  This rule is designed to identify phishing attempts exploiting Google AMP's URL structure for malicious activities. 
  The rule aims to detect specific URL patterns, further analyzing both message content, as well as the destination of the link to distinguish
  between legitimate Google AMP pages and potential malicious usage.
references:
  - "https://cofense.com/blog/google-amp-the-newest-of-evasive-phishing-tactic/"
type: "rule"
severity: "medium"
source: |
  type.inbound
  
  // Any body links with a root domain of google.com and a path starting with /amp/s
  and any(body.links,
          .href_url.domain.root_domain == "google.com"
          and strings.starts_with(.href_url.path, "/amp/s/")
  
          // Microsoft or Docusign logo detected, or a low reputation link, or a captcha on the effective url, or a credphish medium/high confidence or nlu analysis of the effective url screenshot which results in credphish or captcha
          and (
            any(ml.logo_detect(beta.message_screenshot()).brands,
                strings.starts_with(.name, "Microsoft") or strings.ilike(.name, "Docusign")
            )
            or any(body.links,
                   (
                     .href_url.domain.domain not in $tranco_1m
                     or .href_url.domain.domain in $free_file_hosts
                     or .href_url.domain.root_domain in $free_subdomain_hosts
                     or .href_url.domain.domain in $url_shorteners
                     or 
  
                     // mass mailer link, masks the actual URL
                     .href_url.domain.root_domain in (
                       "hubspotlinks.com",
                       "mandrillapp.com",
                       "sendgrid.net"
                     )
                   )
            )
            or (
              beta.linkanalysis(.).credphish.contains_login
              or beta.linkanalysis(.).credphish.contains_captcha
            )
            or any([beta.linkanalysis(.)],
                   .credphish.disposition == "phishing"
                   and .credphish.brand.confidence in ("medium", "high")
            )
            or any(file.explode(beta.linkanalysis(.).screenshot),
                   any(ml.nlu_classifier(.scan.ocr.raw).intents,
                       .name == "cred_theft" and .confidence != "low"
                   )
                   or strings.icontains(.scan.ocr.raw, "site connection is secure")
            )
          )
  )
tags: 
  - "Open redirect"
  - "Credential phishing"
id: "46907029-ef83-50a8-9198-75af39dd5f3b"
