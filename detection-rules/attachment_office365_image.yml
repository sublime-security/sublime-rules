name: "Attachment: Office365 image (unsolicited)"
description: |
  Looks for messages with an image attachment that contains words related to Microsoft, Office365, and passwords.
type: "rule"
severity: "medium"
source: |
  type.inbound
  and length(filter(attachments, .file_type not in~ ('png', 'jpeg', 'jpg', 'bmp'))) == 0
  and (
      any(attachments, 
          .file_type in~ ('bmp', 'png', 'jpg', 'jpeg')
          and any(beta.logo_detect(.).brands, .name in~ ("Microsoft", "Office365"))
      )
      or any(attachments, 
          .file_type in~ ('bmp', 'png', 'jpg', 'jpeg')
          and any(file.explode(.),
              strings.ilike(.scan.ocr.raw, "*microsoft*", "*office"))
      )
  )
  and any(attachments,
      .file_type in~ ('bmp', 'png', 'jpg', 'jpeg')
      and (
          any(file.explode(.),
              length(filter(.scan.strings.strings, strings.ilike(.,
              "*password*",
              "*unread messages*",
              "*Shared Documents*",
              "*expiration*",
              "*office*",
              "*expire*",
              "*expiring*",
              "*kindly*",
              "*renew*",
              "*review",
              "*emails failed*",
              "*kicked out*",
              "*prevented*",
              "*storage quota*",
              "*required now",
              "*cache*",
              "*qr code*",
              "*barcode*",
              "*security update*"
              ))) >= 2     
      ) 
  )
  or (
          any(file.explode(.),
              length(filter(["password",
              "unread messages",
              "Shared Documents",
              "expiration",
              "office",
              "expire",
              "expiring",
              "kindly",
              "renew",
              "review",
              "emails failed",
              "kicked out",
              "prevented",
              "storage quota",
              "required now",
              "cache",
              "qr code",
              "security update"], strings.icontains(..scan.ocr.raw, .))) >= 2   
      )
  )    

  )
  and (
      not any(headers.hops, .authentication_results.compauth.verdict is not null
      and .authentication_results.compauth.verdict == "pass"
      and sender.email.domain.domain == "microsoft.com")
  )
  // unsolicited
  and (
      (
          sender.email.domain.root_domain in $free_email_providers
          and sender.email.email not in $recipient_emails
      )
      or (
          sender.email.domain.root_domain not in $free_email_providers
          and sender.email.domain.domain not in $recipient_domains
      )
  )
tags:
  - "Suspicious attachment"
