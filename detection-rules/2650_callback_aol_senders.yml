name: "Callback Phishing: AOL Senders with Suspicious HTML Template or PDF Attachment"
description: "Detects a specific behavioral pattern from AOL senders using consistent HTML templates and PDF attachment characteristics. The pattern includes particular Yahoo-style formatting with specific font families, and standardized PDF metadata when attachments are present."
type: "rule"
severity: "high"
source: "type.inbound\n// sender is aol\nand sender.email.domain.root_domain == \"aol.com\"\n\n// with no restored/benign messages\nand not profile.by_sender_email().any_messages_benign\n\n// there is a single recipient\nand length(recipients.to) == 1\nand length(recipients.cc) == 0\nand length(recipients.bcc) == 0\n\n// is not a reply\nand headers.in_reply_to is null\n\n// this is another way to limit replies but need to account for \n// a behavior where Yahoo/Aol seems to include it's own message ID as a reference\nand length(headers.references) == 1\n\n// all message-id values end in mail.yahoo.com, some benign messages use @aol.com\nand strings.iends_with(headers.message_id, '@mail.yahoo.com>')\n\n// All are using the legit Yahoo X-Mailer\n// this removes AOL sent from iphones and other non AOL client\nand strings.ends_with(headers.mailer, 'AolMailNorrin')\n\n// exclude common recipients which interact with aol addresses that are commonly (but not always) benign \n// recipeint exclusions are suggested for other recipients\nand (\n  // no attachment\n  (\n    length(attachments) == 0\n    // if there are no attachments focus on the HTML template being observed\n    and (\n\n      // yahoo div followed by <br>\n      // // verdana, helvetica, sans-serif;\n      strings.icontains(body.html.raw,\n                        \"<div class=\\\"yahoo-style-wrap\\\" style=\\\"font-family:verdana, helvetica, sans-serif;font-size:18px;\\\">\\r\\n<div dir=\\\"ltr\\\" data-setdir=\\\"false\\\"><br>\\r\\n\"\n      )\n      // // Helvetica Neue, Helvetica, Arial, sans-serif;\n      or strings.icontains(body.html.raw,\n                           \"<div class=\\\"yahoo-style-wrap\\\" style=\\\"font-family:Helvetica Neue, Helvetica, Arial, sans-serif;font-size:18px;\\\">\\r\\n<div dir=\\\"ltr\\\" data-setdir=\\\"false\\\"><br>\\r\\n\"\n      )\n      // yahoo div followed by doctype \n      // // verdana, helvetica, sans-serif;\n      or strings.icontains(body.html.raw,\n                           \"<div class=\\\"yahoo-style-wrap\\\" style=\\\"font-family:verdana, helvetica, sans-serif;font-size:18px;\\\">\\r\\n<div dir=\\\"ltr\\\" data-setdir=\\\"false\\\"><!DOCTYPE html>\"\n      )\n      // // Helvetica Neue, Helvetica, Arial, sans-serif;\n      or strings.icontains(body.html.raw,\n                           \"<div class=\\\"yahoo-style-wrap\\\" style=\\\"font-family:Helvetica Neue, Helvetica, Arial, sans-serif;font-size:18px;\\\">\\r\\n<div dir=\\\"ltr\\\" data-setdir=\\\"false\\\"><!DOCTYPE html>\"\n      )\n    )\n  )\n  or (\n    // if there is an attachment, there can be only one\n    length(attachments) == 1\n    and all(attachments,\n            // it's a PDF, \n            .file_type == \"pdf\"\n            and (\n              // static content_id value for the attachments\n              .content_id == '<@yahoo.com>'\n              // created by observed static PDF details\n              or (\n                  \n                  // \n                  // This rule makes use of a beta feature and is subject to change without notice\n                  // using the beta feature in custom rules is not suggested until it has been formally released\n                  // \n\n                  beta.parse_exif(.).creator == \"wkhtmltopdf 0.12.6\"\n                  and beta.parse_exif(.).title is null\n                  and beta.parse_exif(.).producer == 'Qt 4.8.7'\n              )\n              // filename contains a single\n              or regex.contains(.file_name,\n                                '^(?:[A-Z][a-z]+)+_[A-Z0-9]{8,9}\\.pdf$'\n              )\n            )\n    )\n  )\n)\n"
attack_types:
  - "Callback Phishing"
tactics_and_techniques:
  - "Free email provider"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "File analysis"
  - "HTML analysis"
  - "Exif analysis"
  - "Sender analysis"
id: "6d875a9e-739a-5f46-d2fd-969052e6b397"
og_id: "f6044eed-ec4b-5959-a4d6-60aa6a8ca76b"
testing_pr: 2650
testing_sha: 1adaf12aa75655417bd5e6a7a70a2b980e3bd21a
