name: "Callback phishing via Zelle Service Abuse"
description: "Callback phishing campaigns have been observed abusing Zelle services to send fraudulent payment requests with callback phishing contents."
type: "rule"
severity: "medium"
source: "type.inbound\nand length(attachments) == 0\nand sender.email.domain.root_domain in (\"zellepay.com\")\nand (\n  // only seeing payment requests abused\n  strings.ilike(body.html.display_text, \"* requested*\")\n  // phone number in subject\n  // the subject contains the seller's \"name\", attacks have been seen with the entire callback text in the seller's name\n  or (\n    regex.icontains(strings.replace_confusables(subject.subject),\n                    '.*\\+?([ilo0-9]{1}.)?\\(?[ilo0-9]{3}?\\)?.[ilo0-9]{3}.?[ilo0-9]{4}.*'\n    )\n    or regex.icontains(strings.replace_confusables(subject.subject),\n                       '.*\\+[ilo0-9]{1,3}[ilo0-9]{10}.*'\n    )\n    or // +12028001238\n regex.icontains(strings.replace_confusables(subject.subject),\n                 '.*[ilo0-9]{3}\\.[ilo0-9]{3}\\.[ilo0-9]{4}.*'\n    )\n    or // 202-800-1238\n regex.icontains(strings.replace_confusables(subject.subject),\n                 '.*[ilo0-9]{3}-[ilo0-9]{3}-[ilo0-9]{4}.*'\n    )\n    or // (202) 800-1238\n regex.icontains(strings.replace_confusables(subject.subject),\n                 '.*\\([ilo0-9]{3}\\)\\s[ilo0-9]{3}-[ilo0-9]{4}.*'\n    )\n    or // (202)-800-1238\n regex.icontains(strings.replace_confusables(subject.subject),\n                 '.*\\([ilo0-9]{3}\\)-[ilo0-9]{3}-[ilo0-9]{4}.*'\n    )\n    or ( // 8123456789\n      regex.icontains(strings.replace_confusables(subject.subject),\n                      '.*8[ilo0-9]{9}.*'\n      )\n      and regex.icontains(strings.replace_confusables(subject.subject),\n                          '\\+[1li]'\n      )\n    )\n  )\n)\nand (\n  (\n    // icontains a phone number within the memo section (wrapped in quotes)\n    (\n      regex.icontains(strings.replace_confusables(body.current_thread.text),\n                      '\\\".*\\+?([ilo0-9]{1}.)?\\(?[ilo0-9]{3}?\\)?.[ilo0-9]{3}.?[ilo0-9]{4}.*\\\"'\n      )\n      or regex.icontains(strings.replace_confusables(body.current_thread.text),\n                         '\\\".*\\+[ilo0-9]{1,3}[ilo0-9]{10}.*\\\"'\n      )\n      or // +12028001238\n regex.icontains(strings.replace_confusables(body.current_thread.text),\n                 '\\\".*[ilo0-9]{3}\\.[ilo0-9]{3}\\.[ilo0-9]{4}.*\\\"'\n      )\n      or // 202-800-1238\n regex.icontains(strings.replace_confusables(body.current_thread.text),\n                 '\\\".*[ilo0-9]{3}-[ilo0-9]{3}-[ilo0-9]{4}.*\\\"'\n      )\n      or // (202) 800-1238\n regex.icontains(strings.replace_confusables(body.current_thread.text),\n                 '\\\".*\\([ilo0-9]{3}\\)\\s[ilo0-9]{3}-[ilo0-9]{4}.*\\\"'\n      )\n      or // (202)-800-1238\n regex.icontains(strings.replace_confusables(body.current_thread.text),\n                 '\\\".*\\([ilo0-9]{3}\\)-[ilo0-9]{3}-[ilo0-9]{4}.*\\\"'\n      )\n      or ( // 8123456789\n        regex.icontains(strings.replace_confusables(body.current_thread.text),\n                        '\\\".*8[ilo0-9]{9}.*\\\"'\n        )\n        and regex.icontains(strings.replace_confusables(body.current_thread.text\n                            ),\n                            '\\\".*\\+[1li].*\\\"'\n        )\n      )\n    )\n    and (\n      (\n        4 of (\n          strings.ilike(body.html.inner_text, '*\"*you did not*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*is not for*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*done by you*\"*'),\n          regex.icontains(body.html.inner_text, \"\\\".*didn\\'t ma[kd]e this.*\\\"\"),\n          strings.ilike(body.html.inner_text, '*\"*Fruad Alert*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*Fraud Alert*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*fraudulent*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*Zelle*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*subscription*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*antivirus*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*order*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*support*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*sincerely apologize*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*receipt*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*invoice*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*Purchase*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*transaction*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*Market*Value*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*BTC*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*call*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*get in touch with our*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*quickly inform*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*quickly reach*\"*'),\n          strings.ilike(body.html.inner_text,\n                        '*\"*detected unusual transactions*'\n          ),\n          strings.ilike(body.html.inner_text, '*\"*without your authorization*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*cancel*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*renew*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*refund*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*+1*\"*'),\n          regex.icontains(body.html.inner_text, '\\\"help.{0,3}desk'),\n          strings.ilike(body.html.inner_text, '*\"* your funds*\"*'),\n          strings.ilike(body.html.inner_text, '*\"* your checking*\"*'),\n          strings.ilike(body.html.inner_text, '*\"* your saving*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*transfer*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*secure your account*\"*'),\n          strings.ilike(body.html.inner_text, '*\"*recover your *\"*'),\n        )\n      )\n      or regex.icontains(body.current_thread.text,\n                         'note from.{0,50}(?:call|reach|contact|paypal)'\n      )\n      or any(ml.nlu_classifier(body.current_thread.text).intents,\n             .name == \"callback_scam\"\n      )\n      or (\n        // Unicode confusables words obfuscated in note\n        regex.icontains(body.html.inner_text,\n                        '\\+\U0001D7ED|\U0001D5FD\U0001D5EE\U0001D606\U0001D5FA\U0001D5F2\U0001D5FB\U0001D601|\U0001D5DB\U0001D5F2\U0001D5F9\U0001D5FD \U0001D5D7\U0001D5F2\U0001D600\U0001D5F8|\U0001D5FF\U0001D5F2\U0001D5F3\U0001D602\U0001D5FB\U0001D5F1|\U0001D5EE\U0001D5FB\U0001D601\U0001D5F6\U0001D603\U0001D5F6\U0001D5FF\U0001D602\U0001D600|\U0001D5F0\U0001D5EE\U0001D5F9\U0001D5F9|\U0001D5F0\U0001D5EE\U0001D5FB\U0001D5F0\U0001D5F2\U0001D5F9'\n        )\n      )\n      or strings.ilike(body.html.inner_text, '*\"*kindly*\"*')\n    )\n  )\n)\n"
attack_types:
  - "BEC/Fraud"
  - "Callback Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Sender analysis"
id: "08727484-0236-5286-be04-8c6aec86bcba"
testing_pr: 2401
testing_sha: edbbcf68b0ed99dfac3a2bfb170c322b3d2d6d31
