name: "Fake Message Thread - Untrusted Sender with a Mismatched Freemail Reply-To Address"
description: |
  Fake Message Threads or Chain Reuse is a common confidence technique exploited by threat actors to bolster credibility.
  This is typically used in conjunction with a reply-to address that is not the same as the sender address. 
references:
  - "https://playground.sublimesecurity.com?id=5ab9a225-4de3-494f-9a55-e16ec9e1e5c3"
type: "rule"
severity: "medium"
source: |
  type.inbound
  and (
    (
      profile.by_sender_email().prevalence in ("new", "outlier")
      and not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  
    // 
    // This rule makes use of a beta feature and is subject to change without notice
    // using the beta feature in custom rules is not suggested until it has been formally released
    //
  
    // known (likely compromised) sender but with unknown reply-to
    or beta.profile.by_reply_to().prevalence in ("new", "outlier")
  )
  
  // Reply-to is a freemail sender but From is not
  and any(headers.reply_to,
          .email.domain.domain in $free_email_providers
          and not .email.domain.domain == sender.email.domain.domain
  )
  and (
    not any(beta.ml_topic(body.current_thread.text).topics,
            .name in (
              "Customer Service and Support",
              "Newsletters and Digests"
            )
            and .confidence in ("medium", "high")
    )
    // do not let topic modelling negate the flag if NLU is highly confident of a malicious body
    or (
      any(beta.ml_topic(body.current_thread.text).topics,
          .name in (
            "Customer Service and Support",
            "Newsletters and Digests"
          )
          and .confidence in ("medium", "high")
      )
      and any(ml.nlu_classifier(body.current_thread.text).intents,
              .name in ("advance_fee", "bec", "cred_theft")
              and .confidence == "high"
      )
    )
  )
  
  // negate known services where the reply-to is intentionally written
  and sender.email.domain.domain not in $replyto_service_domains
  
  // Exclude mailing lists
  and not any(headers.hops,
              any(.fields,
                  .name in ("x-google-group-id", "list-post", "mailing-list")
              )
  )
  
  // Check for Message Thread Indicators
  and (
    regex.icontains(subject.subject, '\b(?:RE|FWD?)\s*:')
    or any([body.current_thread.text, body.html.display_text, body.plain.raw],
           3 of (
             strings.icontains(., "from:"),
             strings.icontains(., "to:"),
             strings.icontains(., "sent:"),
             strings.icontains(., "date:"),
             strings.icontains(., "cc:"),
             strings.icontains(., "subject:")
           )
    )
  )
  
  // Check for the Presence of References or In-Reply-To properties
  and (length(headers.references) == 0 or headers.in_reply_to is null)
attack_types:
  - "BEC/Fraud"
tactics_and_techniques:
  - "Free email provider"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Sender analysis"
id: "ca64e819-576b-574a-abcc-63f1916e8a41"
