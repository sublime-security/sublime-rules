name: "Vendor Compromise: Microsoft Impersonation From Common Sender"
description: "Message contains suspicious links and Microsoft impersonation from a sender common to your environment. Indicative of vendor compromise."
type: "rule"
severity: "high"
source: |
  type.inbound
  and length(body.links) < 10
  and length(filter(body.links,
                    .href_url.domain.domain in $free_file_hosts
                    and (
                      any(ml.nlu_classifier(.display_text).intents,
                          .name == "cred_theft"
                      )
                      or any(ml.nlu_classifier(.display_text).entities,
                             .name == "request"
                      )
                      or regex.icontains(.display_text,
                                         "View (Document|file|share)"
                      )
                    )
             )
  ) == 1
  and 1 of (
    any(ml.logo_detect(beta.message_screenshot()).brands,
        strings.istarts_with(.name, "Microsoft")
    ),
    any(attachments,
        .file_type in $file_types_images
        and any(file.explode(.),
                any(ml.nlu_classifier(.scan.ocr.raw).entities,
                    .text in~ ("Sharepoint", "Microsoft")
                )
        )
    )
  )
  
  // bounce-back negations
  and not strings.like(sender.email.local_part,
                       "*postmaster*",
                       "*mailer-daemon*",
                       "*administrator*"
  )
  and not any(attachments,
              .content_type in (
                "message/rfc822",
                "message/delivery-status",
                "text/calendar"
              )
  )

  // negate replies
  and (length(headers.references) == 0 or headers.in_reply_to is null)
  
  // negate Sharepoint shares
  and not strings.ends_with(headers.message_id, '@odspnotify>')
  
  // negate Sharepoint shares from non-MS domains (personal Onedrive share from a Gmail adddress, for example)
  and not (
    length(body.links) > 0 and all(body.links, .href_url.domain.tld == "ms")
  )
  
  and (
    profile.by_sender_email().prevalence in ("uncommon", "common")
    or profile.by_sender_email().solicited
  )
  // and the sender is not from high trust sender root domains
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )

attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Free file host"
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Header analysis"
  - "Content analysis"
  - "Natural Language Understanding"
  - "URL analysis"
  - "Computer Vision"
  - "Sender analysis"
id: "fb62d206-1674-565d-b579-9c57ea9f7c7e"
