name: "Spam: Attendee List solicitation"
description: "This rule detects messages claiming to have the attendee list from a specific event, they may list various information such as the number of contacts, the demographic and sample contacts. The messages typically offer to send pricing information upon request."
type: "rule"
severity: "low"
source: |
  type.inbound
  and length(body.current_thread.text) < 2000
  and length(body.links) < 5
  and (
    (
      (
        any([subject.subject, body.current_thread.text],
            (
              regex.icontains(.,
                              '(?:Attendee|Buyer|Contact|Decision Maker|Email|Member|Participant|Professional|Registrant|User|Visitor)(?:[[:punct:]]*s)?(?:\s\w*){0,9}(?:list(?:\b|[^ei])|database)'
              )
              and not (
                regex.icount(., 'email(?:[[:punct:]]*s)?(?:\s\w*){0,9}list') == 1
                and regex.icontains(.,
                                    '(?:unsub|remove|safe|delete)[[:punct:]]*s?(?:\s\w*){0,9}(mailing|email).{0,9}list(?:\b|[^ei])',
                                    'email list(?:\b|[^ei])[[:punct:]]*s?(\s\w*){0,5}(?:unsub|remove|safe|delete)'
                )
              )
            )
            or regex.icontains(.,
                               '(?:list|database)(?:[[:punct:]]*s)?(\s\w*){0,9}(?:Attendee|Buyer|Contact|Decision Maker|Email|Member|Participant|Professional|Registrant|User|Visitor)s?'
            )
        )
      )
      and regex.icontains(body.current_thread.text,
                          "(?:interested|accessing|purchas|obtain|acuir|sample)"
      )
      and not regex.icontains(body.current_thread.text,
                              "(?:debit card|transaction.{0,20}processed)"
      )
    )
    // if there are indicators of a previous thread, also inspect the previous thread
    or (
      // contains references to the previous thread
      2 of (
        regex.icontains(body.current_thread.text, '(?:get|got|had) a chance'),
        regex.icontains(body.current_thread.text,
                        '(?:below|previous|last|prior) email'
        ),
        regex.icontains(body.current_thread.text, 'follow(?:ing)? up'),
        regex.icontains(body.current_thread.text, '(?:contact|attendee)s? list'),
        strings.icontains(body.current_thread.text, 'heard back'),
      )
      and any([body.html.display_text, body.plain.raw],
              (
                3 of (
                  strings.icontains(., "from:"),
                  strings.icontains(., "to:"),
                  strings.icontains(., "sent:"),
                  strings.icontains(., "date:"),
                  strings.icontains(., "cc:"),
                  strings.icontains(., "subject:")
                )
                or strings.icontains(.,
                                     strings.concat(sender.display_name,
                                                    " <",
                                                    sender.email.email,
                                                    "> wrote:"
                                     )
                )
              )
              // match _after_ the previous thread indciators
              and (
                regex.icontains(.,
                                '(?:from|to|sent|date|cc|subject|wrote):.*(?:Attendee|Buyer|Contact|Decision Maker|Email|Member|Participant|Professional|Registrant|User|Visitor)(?:[[:punct:]]*s)?(?:\s\w*){0,9}(?:list(?:\b|[^ei])|database)'
                )
                or regex.icontains(.,
                                   '(?:from|to|sent|date|cc|subject|wrote):.*(?:list(?:\b|[^ei])|database)(?:[[:punct:]]*s)?(\s\w*){0,9}(?:Attendee|Buyer|Contact|Decision Maker|Email|Member|Participant|Professional|Registrant|User|Visitor)s?'
                )
                or (
                  2 of (
                    strings.icontains(., "provide counts"),
                    regex.icontains(., "(?:verified|fresh) data"),
                    strings.icontains(., "precise targeting"),
                    strings.icontains(., "deliverability")
                  )
                  and regex.icontains(., '(?:list(?:\b|[^ei])|database)')
                )
              )
      )
    )
  )
  and not profile.by_sender().solicited
  and not profile.by_sender().any_false_positives
tags:
  - "Attack surface reduction"
attack_types:
  - "Spam"
detection_methods:
  - "Content analysis"
  - "Sender analysis"
id: "69715b62-7747-5f85-a399-dc72c3f8cb7d"
