name: "Corporate Services Impersonation Phishing"
description: "Detects phishing attempts that impersonate corporate services such as HR, helpdesk, and benefits, using specific language in the subject or sender's name and containing suspicious links from low-reputation or mass-mailing domains."
type: "rule"
severity: "high"
source: "type.inbound\n// use distinct \"urls\" (without query params) to determine number of links\nand 0 < length(distinct(body.links,\n                        // strip out query params to determine \n                        // the unique number of links\n                        strings.concat(.href_url.scheme,\n                                       .href_url.domain.domain,\n                                       .href_url.path\n                        )\n               )\n) <= 8\n\n// HR language found in subject\nand (\n  (\n    length(subject.subject) > 20\n    and regex.icontains(subject.subject,\n                        '(time.{0,4}sheet)|(employ|staff|update(?:d| to)).{0,30}(benefit|handbook|comp\\b|compensation|salary|\\bpay(?:roll)?\\b|policy|conduct|acknowl|PTO|vacation|assess|eval)',\n                        // shorten the distance to 3 or less words for the word \"review\"\n                        // special handling of benefits\n                        '\\breview\\b(?:\\w+(?:\\s\\w+)?|[[:punct:]]+|\\s+){0,3}(benefits?(?:$|.?(?:statement|enrollment))|handbook|comp\\b|compensation|salary|bonus|\\bpay(?:roll)?\\b)',\n                        // handle the year in the subject, and expand the distance to 5 or less words\n                        '20\\d{2}\\b(?:\\w+(?:\\s\\w+)?|[[:punct:]]+|\\s+){0,5}(benefits?(?:$|.?(?:statement|enrollment))|handbook|comp\\b|compensation|salary|bonus|\\bpay(?:roll)?\\b)'\n    )\n  )\n\n  // or HR language found in sender\n  or (\n    regex.icontains(sender.display_name,\n                    '(Employ|Time.{0,3}sheet|\\bHR\\b|Human R|Handbook|\\bIT[- ]|Help.{0,3}Desk)|Internal.?Comm'\n    )\n    and not regex.icontains(sender.display_name,\n                            \"forum|employee voice|briefs|newsletter|screening\"\n    )\n    and not regex.icontains(sender.display_name,\n                            \"HR (new|vue|view|tech admin|global)\"\n    )\n  )\n\n  // or assessment report language found in body\n  or (\n    regex.icontains(body.current_thread.text,\n                    '20\\d{2}(?:[[:punct:]](?:20)?\\d{2})? (?:\\w+ )?assessment report'\n    )\n  )\n\n  // or HR department language found in body via NLU\n  or any(ml.nlu_classifier(body.current_thread.text).entities,\n         .name == \"org\" and regex.icontains(.text, '\\bhr\\b', 'human resources')\n  )\n)\n\n// suspicious display_text\nand (\n  any(body.links,\n      (\n        regex.icontains(.display_text,\n                        '((Access|verify|view|click|download|goto|keep|VÎ¹ew|release).{0,10}(request|here|attachment|current|download|fax|file|document|message|report|same)s?)'\n        )\n        // a request within the display text of the link\n        or any(ml.nlu_classifier(.display_text).entities, .name == \"request\")\n      )\n      and not strings.ilike(.display_text, \"*unsub*\")\n      and not strings.ilike(.href_url.url, \"*privacy-policy*\")\n      and not strings.ilike(.display_text, \"*REGISTER*\")\n\n      // from a low reputation link\n      and (\n        not .href_url.domain.root_domain in $org_domains\n        and (\n          .href_url.domain.root_domain not in $tranco_1m\n          or .href_url.domain.domain in $free_file_hosts\n          or .href_url.domain.root_domain in $free_file_hosts\n          or .href_url.domain.root_domain in $free_subdomain_hosts\n          or .href_url.domain.domain in $url_shorteners\n        )\n        or \n        // or mass mailer link, masks the actual URL\n        .href_url.domain.root_domain in (\n          \"hubspotlinks.com\",\n          \"mandrillapp.com\",\n          \"sendgrid.net\",\n          \"rs6.net\",\n          \"mailanyone.net\",\n        )\n      )\n  )\n  // or credential theft confidence high\n  or (\n    length(body.links) > 0\n    and any(ml.nlu_classifier(body.current_thread.text).intents,\n            .name == \"cred_theft\" and .confidence == \"high\"\n    )\n    and not sender.email.domain.root_domain in (\n      \"servicenowservices.com\",\n      \"workplaceextras.com\",\n      \"tempo.io\",\n      \"or.us\"\n    )\n  )\n  or any(filter(attachments, .content_type == \"message/rfc822\"),\n         any(file.parse_eml(.).attachments,\n             any(file.explode(.),\n                 regex.icontains(.scan.ocr.raw, 'scan|camera')\n                 and regex.icontains(.scan.ocr.raw, '\\bQR\\b|Q\\.R\\.|barcode')\n             )\n         )\n  )\n)\n// negate messages where \"click here\" was found and was a link actually an unsub link\n// this method allows for matching on other 'click here' links if they are present\nand not (\n  length(filter(body.links, strings.icontains(.display_text, 'click here'))) > 0\n  and (\n    length(filter(body.links, strings.icontains(.display_text, 'click here'))) == strings.icount(body.current_thread.text,\n                                                                                                 'click here to unsubscribe'\n    )\n  )\n)\n\n// negate highly trusted sender domains unless they fail DMARC authentication\nand (\n  (\n    (\n      sender.email.domain.root_domain in $high_trust_sender_root_domains\n      or sender.email.domain.root_domain in $org_domains\n    )\n    and not headers.auth_summary.dmarc.pass\n  )\n  or (\n    sender.email.domain.root_domain not in $high_trust_sender_root_domains\n    and sender.email.domain.root_domain not in $org_domains\n  )\n)\n// not from sharepointonline actual\nand not (\n  sender.email.domain.root_domain == \"sharepointonline.com\"\n  and strings.ends_with(headers.message_id, '@odspnotify>')\n  and strings.starts_with(headers.message_id, \"<Spo\")\n)\n// netate common FP topics\nand not any(beta.ml_topic(body.current_thread.text).topics,\n            .name in (\n              \"Events and Webinars\",\n              \"Advertising and Promotions\",\n              \"Newsletters and Digests\"\n            )\n            and .confidence == \"high\"\n)\n// negate common helpdesk platforms\nand not any(headers.domains, .root_domain in (\"freshemail.io\", \"zendesk.com\"))\n// negate observed HR newsletters\nand not (\n  any(headers.hops,\n      strings.icontains(.authentication_results.spf_details.designator,\n                        \"constantcontact.com\"\n      )\n  )\n  and strings.starts_with(sender.email.local_part, 'newsletters-hr')\n  and sender.email.domain.root_domain == \"ccsend.com\"\n)\nand (\n  not profile.by_sender().solicited\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n    and not profile.by_sender().any_false_positives\n  )\n)\nand not profile.by_sender().any_false_positives\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Employee"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "70bb9a3e-05e5-5e7f-48d9-837be486d487"
og_id: "3cd04f33-5519-5cc1-8740-e8ce6cddf8a0"
testing_pr: 2590
testing_sha: d890ffe020a379f2beb088fd1c85d3f09f398805
