name: "Brand impersonation: Microsoft fake sign-in alert"
description: |
  Detects messages invoking Microsoft's brand that mimic sign-in security alerts. 
references:
  
type: "rule"
severity: "medium"
source: |
  type.inbound
  // Microsoft strings
  and (
    strings.contains(subject.subject, "Microsoft")
    or strings.contains(sender.display_name, "Microsoft")
    or strings.contains(body.current_thread.text, "Microsoft")
    or (
  
      // or Microsoft Brand logo
      any(attachments,
          .file_type in ('png', 'jpeg', 'jpg', 'bmp')
          and any(ml.logo_detect(.).brands, strings.starts_with(.name, "Microsoft"))
      )
    )
  )
  
  // Body contains Indicators of fake sign in notification
  and (
    regex.contains(body.current_thread.text,
                   '(Country.region:.{0,20}IP address:|Platform:.{0,20}Browser:)'
    )
    or regex.contains(body.current_thread.text, "Unusual.{0,10}activity")
  )
  
  // If the sender is not freemail, check if the return path, reply-to emails are freemail,
  // or all 3 sender/return-path/reply-to are mismatched, or the sender is < 90d old or compauth does not pass
  and (
    sender.email.domain.domain in $free_email_providers
    or (
      sender.email.domain.domain not in $free_email_providers
      and (
        headers.return_path.domain.root_domain in $free_email_providers
        or (
          length(headers.reply_to) > 0
          and (
            all(headers.reply_to, .email.domain.root_domain in $free_email_providers)
            and sender.email.domain.domain not in $free_email_providers
          )
        )
        or (
          length(headers.reply_to) > 0
          and all(headers.reply_to,
                  .email.domain.domain != headers.return_path.domain.domain
                  and headers.return_path.domain.domain != sender.email.domain.domain
          )
        )
        or beta.whois(sender.email.domain).days_old <= 90
        or (
          any(headers.hops,
              .authentication_results.compauth.verdict is not null
              and .authentication_results.compauth.verdict not in ("pass", "softpass")
          )
        )
      )
    )
  )
and sender.email.domain.root_domain not in (
  "bing.com",
  "microsoft.com",
  "microsoftonline.com",
  "microsoftsupport.com",
  "microsoft365.com",
  "office.com",
  "onedrive.com",
  "sharepointonline.com",
  "yammer.com",
)
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "File analysis"
  - "Header analysis"
  - "Sender analysis"
  - "Whois"
  
