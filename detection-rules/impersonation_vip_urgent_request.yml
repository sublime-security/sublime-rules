name: "VIP impersonation with urgent request (new sender)"
description: |
  Sender is using a display name that matches the display name of someone in your $org_vips list.

  Detects potential Business Email Compromise (BEC) attacks by analyzing text within email body first-time senders.
type: "rule"
severity: "high"
source: |
  type.inbound
  and any($org_vips, .display_name =~ sender.display_name)
  and (
    any(ml.nlu_classifier(body.current_thread.text).intents,
        .name == "bec" and .confidence == "high"
    )
    or (
      any(ml.nlu_classifier(body.current_thread.text).entities,
          .name == "urgency"
      )
      and any(ml.nlu_classifier(body.current_thread.text).entities,
              .name == "request"
      )
    )
  )
  and (
    (
      profile.by_sender().prevalence != "common"
      and not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )

  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )

  and not profile.by_sender().any_false_positives

attack_types:
  - "BEC/Fraud"
tactics_and_techniques:
  - "Impersonation: VIP"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Content analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "0dd1fa60-6e89-5f70-81a1-6b64eef0e428"
