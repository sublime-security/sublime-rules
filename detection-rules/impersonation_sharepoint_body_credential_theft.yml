name: "Brand impersonation: Sharepoint"
description: |
  Body, attached images or pdf contains a Sharepoint logo. The message contains a link and credential theft language.
type: "rule"
severity: "high"
source: |
  type.inbound
  and length(body.links) > 0
  and (
    any(attachments,
        (.file_type in $file_types_images or .file_type == "pdf")
        and any(ml.logo_detect(.).brands, .name == "Microsoft SharePoint")
    )
    or any(ml.logo_detect(beta.message_screenshot()).brands,
           .name == "Microsoft SharePoint"
    )
  )
  and (
    any(ml.nlu_classifier(body.current_thread.text).intents,
        .name == "cred_theft" and .confidence == "high"
    )
    or any(file.explode(beta.message_screenshot()),
           any(ml.nlu_classifier(.scan.ocr.raw).intents,
               .name == "cred_theft" and .confidence == "high"
           )
    )
  )
  and (
    (
      profile.by_sender().prevalence in ("new", "outlier")
      and not profile.by_sender().solicited
    )
    or profile.by_sender().any_messages_malicious_or_spam
  )
  and not profile.by_sender().any_false_positives
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Content analysis"
  - "File analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "284b1b70-8daa-5adf-9df8-15d4c6b5ead9"
