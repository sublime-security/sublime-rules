name: "Link: IPFS"
description: "Detects messages containing links that have 'ipfs' in the domain, or unanalyzed links that contain 'ipfs' in the url. IPFS has been recently observed hosting phishing sites."
references:
  - "https://securelist.com/ipfs-phishing/109158/"
  - "https://docs.ipfs.tech/how-to/address-ipfs-on-web/"
type: "rule"
severity: "medium"
source: "type.inbound\nand any(body.links,\n        // Any body link domains contain \"ipfs\"\n        (\n          strings.icontains(.href_url.domain.domain, \"ipfs\")\n          and not .href_url.domain.root_domain == \"ipfs.com\"\n        )\n\n        // Or the path contains ipfs anchored to a leading and trailing '-', '/', '.'\n        or (\n          regex.icontains(.href_url.query_params, '[\\.-/]ipfs[\\.-/]')\n          and .href_url.domain.domain not in $org_domains\n          and (\n            (\n              // don't include high rep domains\n              .href_url.domain.domain not in $tranco_1m\n              and .href_url.domain.domain not in $umbrella_1m\n            )\n            // if it's in Tranco or Umbrella, still include it if it's one of these\n            or .href_url.domain.domain in $free_file_hosts\n            or .href_url.domain.root_domain in $free_file_hosts\n            or .href_url.domain.root_domain in $free_subdomain_hosts\n          )\n        )\n)\n\n// adding negation block for legitimate domains with ipfs in their name\nand not sender.email.domain.domain in (\"shipfsl.com\")\n\n// negate ipfs.com issues\nand not any(recipients.to, .email.domain.domain == \"ipfs.com\")\nand not (\n    sender.email.domain.root_domain is not null \n    and sender.email.domain.root_domain == \"ipfs.com\"\n  and headers.auth_summary.dmarc.pass\n)\n"
attack_types:
  - "Credential Phishing"
  - "Malware/Ransomware"
tactics_and_techniques:
  - "Free file host"
  - "Free subdomain host"
  - "IPFS"
detection_methods:
  - "Sender analysis"
  - "URL analysis"
id: "6567c39a-8077-5d12-4cc0-8d5c6485477b"
og_id: "19fa6442-83b9-5479-ba04-61906b595929"
testing_pr: 2702
testing_sha: de21b238dbd4ac6d3ff386875619cbbe5402d228
