name: "Suspicious Request for Account Statements"
description: "Detects messages containing multiple payment-related text patterns combined with authentication failure. The rule checks both current and previous message threads for these patterns within reasonable text length limits."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and length(attachments) == 0
  and (
    (
      length(body.current_thread.text) < 2000
      and 3 of (
        regex.icontains(body.current_thread.text, "process.{0,10} payment"),
        regex.icontains(body.current_thread.text,
                        "account.{0,10}(balance|status|information)"
        ),
        regex.icontains(body.current_thread.text,
                        "(outstanding|unpaid|overdue).{0,10}invoices?"
        ),
        regex.icontains(body.current_thread.text,
                        "(pending|open).{0,10}invoices?"
        ),
        strings.icontains(body.current_thread.text, "kindly confirm"),
        strings.icontains(body.current_thread.text, "confim if they match"),
        strings.icontains(body.current_thread.text, "on system"),
        strings.icontains(body.current_thread.text, "current statement"),
        strings.icontains(body.current_thread.text, "obtain a copy"),
        strings.icontains(body.current_thread.text, "send all"),
        strings.icontains(body.current_thread.text, "send your documentation"),
        regex.icontains(body.current_thread.text, "(past due|current) invoices")
      )
    )
    or (
      0 < length(body.previous_threads) <= 5
      and any(body.previous_threads,
              length(.text) < 2000
              and 3 of (
                regex.icontains(.text, "process.{0,10} payment"),
                regex.icontains(.text, "account.{0,10}(balance|status|information)"),
                regex.icontains(.text, "(outstanding|unpaid|overdue).{0,10}invoices?"),
                regex.icontains(.text, "(pending|open).{0,10}invoices?"),
                strings.icontains(.text, "confirm if they match"),
                strings.icontains(.text, "kindly confirm"),
                strings.icontains(.text, "on system"),
                strings.icontains(.text, "current statement"),
                strings.icontains(.text, "obtain a copy"),
                strings.icontains(.text, "send all"),
                strings.icontains(.text, "send your documentation"),
                regex.icontains(.text, "invoices|credits|rebates"),
                regex.icontains(.text, "(past due|current) invoices")
              )
      )
    )
  )
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )

attack_types:
  - "BEC/Fraud"
tactics_and_techniques:
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
id: "fd928e21-a2ee-5e48-a051-fef6b94c8ff4"
