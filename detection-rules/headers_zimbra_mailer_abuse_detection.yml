name: "Headers: Zimbra mailer abuse with suspicious patterns"
description: |
  Detects abuse of legitimate Zimbra mail servers for phishing and scam campaigns.
  Attackers often leverage institutional or academic domains with Zimbra installations to bypass email filtering,
  while using suspicious reply-to addresses, mismatched domains, and social engineering tactics.
type: "rule"
severity: "medium"
source: |
  type.inbound
  and strings.starts_with(headers.mailer, "Zimbra")
  and (
    // Mismatch between sender and reply-to domains
    (
      length(headers.reply_to) > 0
      and all(headers.reply_to,
              .email.domain.root_domain != sender.email.domain.root_domain
      )
    )
    // Freemail or onmicrosoft.com domain in reply-to (common in fraudulent campaigns)
    or any(headers.reply_to, 
        strings.icontains(.email.domain.domain, "onmicrosoft.com") 
        or strings.icontains(.email.domain.domain, "gmail.com")
        or strings.icontains(.email.domain.domain, "outlook.com")
        or strings.icontains(.email.domain.domain, "hotmail.com")
        or strings.icontains(.email.domain.domain, "yahoo.com")
        or strings.icontains(.email.domain.domain, "protonmail.com")
    )
    // Display name manipulation
    or (
      sender.display_name is not null
      and (
        // Suspicious titles in display name
        strings.ilike(sender.display_name, 
            "*Dr.*", 
            "*Director*", 
            "*Manager*", 
            "*CEO*", 
            "*President*", 
            "*Chairman*",
            "*Financial*",
            "*Officer*"
        )
        // Display name doesn't match email local part
        or (not strings.icontains(sender.email.local_part, sender.display_name) and length(sender.display_name) > 0)
      )
    )
  )
  // Exclude legitimate business communications
  and not (
    (
      strings.ilike(body.current_thread.text, "*Invoice*", "*Quote*", "*payment*")
      and strings.ilike(body.current_thread.text, "*attached*", "*please find*", "*enclosed*")
      and length(attachments) > 0
      and attachments[0].file_type in ("pdf", "xlsx", "docx")
    )
    or strings.ilike(body.current_thread.text, "*meeting*", "*call*", "*zoom*", "*teams*", "*conference*")
  )
  // Profile checks to eliminate false positives
  and (
    (
      profile.by_sender().prevalence in ("new", "outlier")
      and not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not profile.by_sender().any_false_positives

attack_types:
  - "Phishing"
  - "BEC/Fraud"
tactics_and_techniques:
  - "Social engineering"
  - "Email infrastructure abuse"
detection_methods:
  - "Header analysis"
  - "Sender analysis"