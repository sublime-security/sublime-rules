name: "Corporate Services Impersonation Phishing"
description: "Detects phishing attempts that impersonate corporate services such as HR, helpdesk, and benefits, using specific language in the subject or sender's name and containing suspicious links from low-reputation or mass-mailing domains."
type: "rule"
severity: "high"
source: |
  type.inbound
  and 0 < length(body.links) < 8

  // HR language found in subject
  and (
    (
      length(subject.subject) > 20
      and regex.icontains(subject.subject,
                          '(time.{0,4}sheet)|(employ).{0,30}(benefit|handbook|comp\b|compensation|salary|pay(roll)?|policy|conduct|acknowl|PTO|vacation)'
      )
    )

    // or HR language found in sender
    or (
      regex.icontains(sender.display_name,
                      '(Employ|Time.{0,3}sheet|\bHR\b|Human R|Handbook|\bIT[- ]|Help.{0,3}Desk)'
      )
      and not regex.icontains(sender.display_name,
                              "forum|employee voice|briefs|newsletter|screening"
      )
      and not regex.icontains(sender.display_name, "HR (new|vue|view|tech admin|global)")
    )
  )

  // suspicious display_text
  and (
  any(body.links,
      regex.icontains(.display_text,
                      '((verify|view|click|download|goto|keep|VÎ¹ew|release).{0,10}(request|here|attachment|current|download|fax|file|document|message|same)s?)'
      )
      and not strings.ilike(.display_text, "*unsub*")
      and not strings.ilike(.href_url.url, "*privacy-policy*")
      and not strings.ilike(.display_text, "*REGISTER*")
  
      // from a low reputation link
      and (
        not .href_url.domain.root_domain in $org_domains
        and (
          .href_url.domain.root_domain not in $tranco_1m
          or .href_url.domain.domain in $free_file_hosts
          or .href_url.domain.root_domain in $free_file_hosts
          or .href_url.domain.root_domain in $free_subdomain_hosts
          or .href_url.domain.domain in $url_shorteners
        )
        or 
        // or mass mailer link, masks the actual URL
        .href_url.domain.root_domain in (
          "hubspotlinks.com",
          "mandrillapp.com",
          "sendgrid.net",
          "rs6.net",
          "mailanyone.net",
        )
      )
  )
    // or credential theft confidence high
    or (
      length(body.links) > 0
      and any(ml.nlu_classifier(body.current_thread.text).intents,
              .name == "cred_theft" and .confidence == "high"
      )
      and not sender.email.domain.root_domain in (
        "servicenowservices.com",
        "workplaceextras.com",
        "tempo.io",
        "or.us"
      )
    )
  )
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  // not from sharepointonline actual
  and not (
      sender.email.domain.root_domain == "sharepointonline.com" and 
      strings.ends_with(headers.message_id, '@odspnotify>') and strings.starts_with(headers.message_id, "<Spo")
  )
  // negate common helpdesk platforms
  and not any(headers.domains, .root_domain in ("freshemail.io", "zendesk.com"))
  and (
    not profile.by_sender().solicited
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  and not profile.by_sender().any_false_positives
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Employee"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "3cd04f33-5519-5cc1-8740-e8ce6cddf8a0"
