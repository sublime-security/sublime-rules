name: "Service Abuse: HelloSign From an Unsolicited Sender Address"
description: "Detects messages from HelloSign in which the document originates from a newly observed email address.  The email address is extracted from across multiple message components, including HTML body templates and email header fields."
type: "rule"
severity: "low"
source: |
  sender.email.domain.domain == "mail.hellosign.com"
  and (
    // extract it out of the body html template
    (
      // if the sender_email is available in the body
      regex.icontains(body.html.raw,
                      '<th class="action-item--action[^\>]+\>\s*[^\<]*\((?P<sender_email>[^\)]+)\).*?</th>'
      )
      // check that the sender email has not been observed previously
      and all(regex.iextract(body.html.raw,
                             '<th class="action-item--action[^\>]+\>\s*[^\<]*\((?P<sender_email>[^\)]+)\).*?</th>'
              ),
              .named_groups["sender_domain"] not in $org_domains
              and .named_groups["sender_email"] not in $recipient_emails
              and .named_groups["sender_email"] not in $sender_emails
      )
    )

    // extract the element out of header hops if it's there
    or any(headers.hops,
           any(.fields,
               .name == "X-Mailgun-Variables"
               and strings.icontains(.value, 'on_behalf_of_email')
               and all(regex.iextract(.value,
                                      '\"on_behalf_of_email": \"(?P<sender_email>[^\"]+@(?P<sender_domain>[^\"]+))\",'
                       ),
                       .named_groups["sender_domain"] not in $org_domains
                       and .named_groups["sender_email"] not in $recipient_emails
                       and .named_groups["sender_email"] not in $sender_emails
               )
           )
    )

    // extract it from the "reply to sender" element withn the body.html.raw
    or (
      regex.icontains(body.html.raw,
                      '<a href="mailto:[^\?]+\?[^\"]+\"[^\>]+\>(?:<img[^\>]+\>)?\s*Reply to sender<\/a>'
      )
      and all(regex.iextract(body.html.raw,
                             '<a href="mailto:(?P<sender_email>[^\?]+@(?P<sender_domain>[^\?]+))\?[^\"]+\"[^\>]+\>(?:<img[^\>]+\>)?\s*Reply to sender<\/a>'
              ),
              .named_groups["sender_domain"] not in $org_domains
              and .named_groups["sender_email"] not in $recipient_emails
              and .named_groups["sender_email"] not in $sender_emails
      )
    )
  )
tags:
  - "Attack surface reduction"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Social engineering"
  - "Free file host"
  - "Evasion"
detection_methods:
  - "HTML analysis"
  - "Sender analysis"
  - "Header analysis"
id: "3a70f7dc-1115-5685-ced4-7aab3d6962ed"
og_id: "68ca0753-207f-56a0-9dba-3bbbad002bbf"
testing_pr: 2548
testing_sha: c698df8c5d3046801a777bf6262e641eb570301f
