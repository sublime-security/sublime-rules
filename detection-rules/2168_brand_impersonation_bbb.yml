name: "Brand Impersonation: The Better Business Bureau (BBB)"
description: "Detect impersonation of the Better Business Bureau (BBB) from unsolicited sender"
type: "rule"
severity: "medium"
source: |
  type.inbound
  and 
  // display name contains bbb
  (
    regex.icontains(strings.replace_confusables(sender.display_name),
                    '(?:\bBBB\b|better business bureau)'
    )
    // or levenshtein distance similar to the full name
    or strings.ilevenshtein(strings.replace_confusables(sender.display_name),
                            'better business bureau'
    ) <= 1
  )
  // doesn't contain a link to the legit method of responding to bbb complaints
  and not any(body.links,
          .href_url.domain.domain == "respond.bbb.org"
          and .href_url.path == "/respond/"
          and .display_url.domain.domain == "respond.bbb.org"
          and .display_url.path == "/respond/"
  )
  // and the sender is not from the bbb and passes auth
  and not (
    (
      sender.email.domain.root_domain in (
        "bbb.org", 
        "mybbb.org", 
        "bbbcommunity.org", // official BBB site
        "bluebbb.org", // official BBB site
        "thebbb.org", // official BBB site        
        "thefirstbbb.org",
        "bbbnp.org", // unrelated domain that sends with BBB within the display name
        "lasvbbb.org", // lasvegas
        "bbbhou.org", // houston
        "bbbemail.org", // legit domain
        "bbbarkansas.org" // arkansas
      )
     or sender.email.domain.domain in (
        "bbbwisegivingalliance.ccsend.com", // official BBB comms for events
        "betterbeveragebureau.ccsend.com" //unrelated but uses BBB
     )
   )
    and headers.auth_summary.dmarc.pass
  )
  and ml.nlu_classifier(body.current_thread.text).language == "english"
  // and the sender is not from high trust sender root domains
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
  
  // not solicited
  and not profile.by_sender().solicited
  
attack_types:
  - "Credential Phishing"
  - "BEC/Fraud"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Sender analysis"
id: "0cdc0e74-4bfe-5066-907c-6ee990ec4634"
og_id: "76f54e5f-c937-5693-b8e7-3ced7dac61f9"
testing_pr: 2168
testing_sha: e03a1ebe310cb06fd584d63a2f39ce0e78f798ca