name: "Brand impersonation: Microsoft with embedded logo and credential theft language"
description: "This rule detects messages impersonating Microsoft via a logo and contains credential theft language. From a new and unsolicited sender."
type: "rule"
severity: "high"
source: |
  type.inbound
  and length(attachments) == 0
  and any(ml.logo_detect(beta.message_screenshot()).brands, 
      strings.starts_with(.name, "Microsoft")
  )
  and any(ml.nlu_classifier(body.current_thread.text).intents, 
      .name == "cred_theft" and .confidence in ("medium", "high")
  )
  and (
    not any(headers.hops,
            .authentication_results.compauth.verdict is not null
            and .authentication_results.compauth.verdict == "pass"
            and sender.email.domain.domain in (
              "microsoft.com",
              "sharepointonline.com"
            )
    )
  )
  and (
    (
        profile.by_sender().prevalence in ("new", "outlier")
        and not profile.by_sender().solicited
    )
    or (
      profile.by_sender().any_messages_malicious_or_spam
      and not profile.by_sender().any_false_positives
    )
  )
  
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Social engineering"
detection_methods:
  - "Computer Vision"
  - "Natural Language Understanding"
  - "Sender analysis"
id: "3ee9ef3d-8ec4-5df0-a8a2-5c6d037eb17a"
