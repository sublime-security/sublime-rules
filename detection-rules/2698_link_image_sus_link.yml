name: "Link: Large Embedded Image Links to Suspicious URLs"
description: "Detects messages containing embedded images over 5000 bytes and 300x300 pixels that link to potentially malicious destinations including free file hosts, newly registered domains, or suspicious authentication flows."
type: "rule"
severity: "high"
source: "type.inbound\nand 0 < length(attachments) < 10\nand strings.contains(body.html.raw, 'cid:')\nand any(\n        // \n        // This rule makes use of a beta feature and is subject to change without notice\n        // using the beta feature in custom rules is not suggested until it has been formally released\n        // \n\n                  \n        // get all the links which have an attached image as a decendant\n        beta.html_xpath(body.html,\n                        '//a[descendant::img[starts-with(@src,\"cid:\")]]'\n        ).nodes,\n\n        // extract the content id of the attached image from the img src\n        any(regex.extract(.raw, 'src=\\\"cid:(?P<cid>.*)\\\"'),\n            // loop through the attachments finding the linked image\n            any(filter(attachments,\n                       strings.contains(.content_id, ..named_groups[\"cid\"])\n                ),\n                // the linked imagine is \"large\"\n                .size > 5000\n                and beta.parse_exif(.).image_height > 300\n                and beta.parse_exif(.).image_width > 300\n            )\n            // // and the link is sus\n            and any(beta.html_xpath(.., '@href').nodes,\n            // free file hosts\n                        strings.parse_url(.raw).domain.domain in $free_file_hosts\n                        or strings.parse_url(.raw).domain.root_domain in $free_file_hosts\n                        // free subdomain hosts\n                        or strings.parse_email(.raw).domain.domain in $free_subdomain_hosts\n                        or strings.parse_email(.raw).domain.root_domain in $free_subdomain_hosts\n                        \n                        // TODO - Renable before merging\n                        // phishing\n                        // or ml.link _ analysis(strings.parse_url(.raw)).credphish.disposition == \"phishing\"\n                        // custom captcha thing\n                        //or strings.istarts_with(ml.link _ analysis(strings.parse_url(.raw\n                        //                                         )\n                        //                        ).final_dom.display_text,\n                        //                        \"I'm Human\"\n                        //)\n                        \n                        // newly registered domaina\n                        or network.whois(strings.parse_url(.raw).domain).days_old < 31\n                        // contains a the recipient email address\n                        or any(recipients.to,\n                               .email.domain.valid\n                               and (\n                                 // plain text\n                                 strings.icontains(..raw, .email.email)\n                                 // base64 encoded\n                                 or any(beta.scan_base64(strings.parse_url(..raw\n                                                         ).url,\n                                                         format=\"url\",\n                                                         ignore_padding=true\n                                        ),\n                                        strings.icontains(., ..email.email)\n                                 )\n                               )\n                        )\n            )\n        )\n)\n"
attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Evasion"
  - "Image as content"
  - "Social engineering"
  - "Free file host"
  - "Free subdomain host"
detection_methods:
  - "Content analysis"
  - "HTML analysis"
  - "URL analysis"
  - "File analysis"
  - "Exif analysis"
  - "Whois"
id: "75220ace-642d-596d-1ad6-9753779d641e"
og_id: "240d6a2e-3d06-5db4-84bb-e8e7efe20f1f"
testing_pr: 2698
testing_sha: 73aed706e1d5a3284061b9e28362a2292449cbda
