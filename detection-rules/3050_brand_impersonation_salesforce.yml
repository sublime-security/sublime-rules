name: "Brand Impersonation: Salesforce"
description: "Detects impersonation of Salesforce through display name, email domain, or domain similarity, excluding legitimate Salesforce communications, training-related emails with proper authentication, and internal domain notifications."
type: "rule"
severity: "medium"
source: |
  type.inbound
  and (
    regex.icontains(sender.display_name, 'salesforce')
    or strings.ilike(sender.display_name, "*salesforce*")
    or strings.ilevenshtein(sender.display_name, 'salesforce') <= 2
    or strings.ilike(sender.email.domain.domain, '*salesforce*')
  )
  and not (
    (
      // legitimate domains
      (
        sender.email.domain.root_domain in (
          "salesforce.com",
          "salesforceventures.com",
          "tangocard.com", // https://www.tangocard.com/salesforce-partnership
          "elevatesalesforce.com", // unrelated but name in domain 
          "salesforceben.com", // salesforce newsletter
          "connectwithsal.com", // levenshtein 
          "smartsheet.com", // used by salesforce
          "hic-salesforce.com", // third party salesforce partner
          "aspiresalesforceconsultancy.net", // third party salesforce partner
          "kestoneglobal.biz", // third party 
          "salesforceeurope.com", // outsourced salesforce staffing
          "salesforcerecruiter.com", // outsourced salesforce staffing
          "on24event.com"
        )
        or sender.email.domain.domain in ("salesforce.rxsavingssolutions.com", "salesforce.jointcommission.org") // unrelated but legit domains
      )
      and headers.auth_summary.dmarc.pass
    )
    // email related to salesforce training being offered
    or (
      (
        regex.icontains(body.current_thread.text, "salesforce (training|bootcamp|research)")
        or regex.icontains(subject.subject, "salesforce (training|bootcamp|research)")
      )
      and headers.auth_summary.dmarc.pass
   )
  //  email from own domain with salesforce notification
    or (
      sender.email.domain.root_domain in $org_domains
      and not headers.auth_summary.dmarc.pass
    )
  )
  and not profile.by_sender().solicited
  and not any(body.links, .href_url.domain.root_domain == "salesforce.com")
  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and not headers.auth_summary.dmarc.pass
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  ) 

attack_types:
  - "Credential Phishing"
tactics_and_techniques:
  - "Impersonation: Brand"
  - "Lookalike domain"
  - "Social engineering"
detection_methods:
  - "Content analysis"
  - "Header analysis"
  - "Sender analysis"
id: "c5f0e666-81f0-5d17-a470-12ab75113631"
og_id: "736dfb87-1f99-5cdb-aefc-392257376f3d"
testing_pr: 3050
testing_sha: 73d04b06fccfa51b736c3d359077d6b787e642b1