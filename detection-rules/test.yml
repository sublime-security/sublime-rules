source: |-
  type.inbound
  // uncomment below for must contain at least 1 link, or at least 1 attachment
  // and (length(body.links) > 0 or length(attachments) > 0)

  // content checks
  and (
    strings.ilike(body.current_thread.text,
                  "*company structure*", // replicated from FanDuel yara
                  "*approval process*", // replicated from FanDuel yara
                  "*payment approvals*", // replicated from FanDuel yara
                  "*approvals*", // replicated from FanDuel yara
                  "*approver*", // replicated from FanDuel yara
                  // "*structure*", // replicated from FanDuel yara
                  "*right person to contact*", // replicated from FanDuel yara
                  "*contact details of*", // replicated from FanDuel yara
                  "*in case you missed my last message*", // replicated from FanDuel yara
                  "*pre-IPO investment opportunity*", // Specific to IPO scams
                  "*exclusive access to IPO*", // Specific to IPO scams
                  "*unregistered shares*", // Common in IPO fraud
                  "*IPO speculation*", // Associated with risky/fraudulent behavior
                  "*high returns IPO*", // Common lure in scams
                  "*early access to shares*", // Typical scam promise
                  "*private stock offering*", // Related to pre-IPO scams
                  "*secret IPO investment*", // Overstated offer in scams
                  "*guaranteed IPO profits*" // Unrealistic promise in scams
    )
    or any([subject.subject, sender.display_name],
           regex.icontains(., '(\bIPO\b|public offering)')
    )
  )

  // and nlu intent is not benign or there are body links leading to credential phishing
  and (
    length(ml.nlu_classifier(body.current_thread.text).intents) > 0
    or (
      0 < length(body.links) < 7
      and any(body.links,
              beta.linkanalysis(.).credphish.disposition == "phishing"
              and beta.linkanalysis(.).credphish.confidence in ("medium", "high")
      )
    )
  )

  // was not solicited
  and not profile.by_sender().solicited

  // negate highly trusted sender domains unless they fail DMARC authentication
  and (
    (
      sender.email.domain.root_domain in $high_trust_sender_root_domains
      and (
        any(distinct(headers.hops, .authentication_results.dmarc is not null),
            strings.ilike(.authentication_results.dmarc, "*fail")
        )
      )
    )
    or sender.email.domain.root_domain not in $high_trust_sender_root_domains
  )
type: "detection_rule"
name: "FanDuel - Listing"
authors:
  - name: "Chris Gurney" # Add your name!
description: "Base rule to help detect potential phishing emails related to the IPO
  and listing of the company"
attack_types: #delete any bullets that don't apply. 
  - "BEC/Fraud"
  - "Spam"
tactics_and_techniques: #delete any bullets that don't apply. 
  - "Social engineering"
detection_methods: #delete any bullets that don't apply. 
  - "Content analysis"
  - "Header analysis"
  - "Natural Language Understanding"
  - "Sender analysis"
references: []
tags:
- "listing"
- "fanduel"
- "custom"
severity: "high"
id: "9d52987a-657b-557d-af3e-60fb1c09a64d"
